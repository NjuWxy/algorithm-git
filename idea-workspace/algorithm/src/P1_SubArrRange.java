/**子数组取值范围
 * 给定数组arr和整数num，求arr的连续子数组中满足：其最大值减去最小值的结果大于num的个数。请实现一个时间复杂度为O(length(arr))的算法。
 * 用一个大小不断变化的窗口，i为窗口左端，j为窗口右端，先保持i不变，向右移动j。当有这个窗口中最大值-最小值>num时，停止移动j，移动i,再保持i不动……
 * 内循环（移动j），先更新两个队列，再判断是否要跳出内循环，再移动j
 *      更新最大值队列：不断淘汰队尾比当前新滑进窗口的值小的,最后队列里加入当前新滑进窗口的值的角标
 *      更新最小值队列：不断淘汰队尾比当前新滑进窗口的值大的,最后队列里加入当前新滑进窗口的值的角标
 *      判断是否要跳出内循环：满足最大值-最小值>num时，说明j以及j向右扩充的所有子数组都满足，res+=arr.length-j
 * 外循环（移动i），再更新两个队列,再移动i
 *      判断队首是否会被移出窗口，会的话把队首去掉
 */
public class P1_SubArrRange {
}
